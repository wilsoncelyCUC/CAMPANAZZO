continue
next
displayer
next
displayer
next
@profile_worker == @profile_connected
next
displayer
next
@profile_worker == @profile_connected
@profile_worker
@profile_connected
@profile_conneted
continue
@profile_connected
@profile_worker
continue
Review.all
@reviews
@reviews = Review.where(profile_id: @profile_worker.id)
@reviews = Review.where(profile_id: @profile_worker)
@profile_worker
@profile_worke
continue
@skills
next
continue
next
@skills
continue
post
end_date
start_date
Reservation.create!(post_id:185, profile_id:323, start_date: start_date, end_date: end_date )po
profile_id = Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).first
Reservation.create!(post_id:185, profile_id:323, start_date: start_date, end_date: end_date )
profile_id = Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).first.id
profile = Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).first.id
post.id
Reservation.create!(post_id: post.id,profile_id: Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).first.id , start_date: start_date, end_date: end_date )
start_date
 Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).first.id
post.id
!Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).empty?
continue
proo = Profession.find((MyProfession.find(professions_bucket.sample)).profession_id)
proo = Profession.find((MyProfession.find(professions_bucket.sample)).id)
proo = Profession.find(MyProfession.find(professions_bucket.sample))
proo = Profession.find(MyProfession.find(professions_bucket.sample.id))
proo = Profession.find(MyProfession.find(professions_bucket.sample))
proo
proo = Profession.find(my.profession_id)
my = MyProfession.find(professions_bucket.sample)
profession_wanted[0]
profession_wanted
profesion_wanted
  profession_wanted = Profession.joins(:my_professoins).where(my_professions: { id: professions_bucket.sample })
target = Profile.find(professions_bucket.sample)
target + Profile.find(professions_bucket.sample)
 professions_bucket.sample.class
 professions_bucket.sample.toclass 
Profile.find(professions_bucket.sample)
 professions_bucket.sample 
MyProfession.all
pro
pro = MyProfession.where(profile_id: professions_bucket.sample)
 professions_bucket.sample 
profession_wanted = Profession.joins(:my_professoins).where(my_professions: { profile_id: professions_bucket.sample })
profession_wanted = Profession.joins(:my_professoins).where(:my_professions { profile_id: professions_bucket.sample })
profession_wanted[0]
profession_wanted
profession_wanted = Profession.joins(:my_professoins).where(my_professions: { profile_id: professions_bucket.sample })
Profession.joins(:my_professoins).where(my_professions: { profile_id: professions_bucket.sample })
continue
professions_bucket.sample
professions_bucket.sample.id
Profession.joins(:my_professoins).where(my_professions: { profile_id: professions_bucket.sample.id })
continue
profession_wanted = Profession.joins(:my_professoins).where(my_professions: { profile_id:2 professions_bucket} )
profession_wanted = Profession.joins(:my_professoins).where(:my_professions { profile_id: professions_bucket} )
profession_wanted[0]
profession_wanted
profession_wanted = Profession.joins(:my_professoins).where(my_professions: { profile_id: professions_bucket} )
profession_wanted = Profession.joins(:my_professoins).where(my_professions.arel_table[:order_count].in(professions_bucket) )
profession_wanted = Profession.joins(:my_professoins).where(my_professions { profile_id: professions_bucket} )
profession_wanted = Profession.joins(:my_professoins).where(my_profession.profile_id: professions_bucket )
 professions_bucket 
 profession_wanted
profession_wanted = Profession.joins(:my_professoins).where("my_profession.profile_id IN ?", professions_bucket ).references(:my_professions).sample
professions_bucket
profession_wanted
profession_wanted = Profession.joins(:my_professoins).where("my_profession.profile_id IN ?", professions_bucket ).references(:my_professoins).sample
 Profession.joins(:my_professoins).where("my_profession.profile_id IN ?", professions_bucket ).references(:my_professoins)
 Profession.joins(:my_professoins).where("my_profession.profile_id IN ?", professions_bucket ).references(:my_professoins).sample
continue
contine
continue
!Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).empty?
next
 !Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).empty?
next
!Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).empty?
continue
continie
next
post
back
profile
post
post.id
next
!Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).empty?
next
puts "#{profile.name} has created the post : #{post.name} "
next
start_date
 end_date
next
end_hour
next
start_date
next
puts "#{profile.name} has created the post : #{post.name} "
profile
:   puts "#{profile.name} has created the post : #{post.name} "
next
 profession_wanted
next
puts "#{profile.name} #{profile.last_name} with #{user.email} created"
next
 profession_wanted
!Profile.joins(:my_professions).where(my_professions:{profession_id: profession_wanted.id}).empty?
quit
post.quick_assessment[0]
post.quick_assessment
post.quick_assess`
post.quick_assessment
post.quick_assessment[0]
end_hour
next
start_date
next
=> 144:   start_date = Faker::Time.between_dates(from: Date.today - 1, to: Date.today, period: :morning)
continue
@my_posts_current
next
 @posts
continue
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ?' , DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ('start_date > ?'), Datetime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ('start_date > ?') Datetime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: 'start_date > ?' , Datetime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ?'}, Datetime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ?'} Datetime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ?'} Date.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ?'} , Date.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ?' , Date.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ('start_date > ?' , Date.now ) )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ('start_date > ?' , DateTime.now ) )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ?' , DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date > ? , DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {'start_date >= ? , DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {(' start_date > ? ') DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: start_date => DateTime.now   )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: { start_date => DateTime.now }  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: { start_date >= DateTime.now }  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations:  start_date >= DateTime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ' start_date >= ? ', DateTime.now )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: (' start_date >= ? '), DateTime.now ) )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: (' start_date >= ? '), DateTime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: (' start_date >= ? ') DateTime.now  )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {(' start_date >= ? ') DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {(' start_date => ? ') DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: (' start_date => ? ', DateTime.now ) )
Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {' start_date => ? ', DateTime.now } )
Post.joins(:reservations).where( profile_id:  @profile_customer.id )
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: {' start_date >= ? ', DateTime.now } )
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ' start_date >= ? ', DateTime.now )
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: (' start_date >= ? ', DateTime.now ))
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ('start_date >= ?', '2022-10-22' ))
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ("start_date => ?" ,DateTime.now ))
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ('start_date >= ?', '2022-10-22' ))
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ('start_date >= ?', DateTime.now ))
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ("start_date >= ?" DateTime.now ))
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id ).where( reservations: ("start_date >= ?", DateTime.now ))
 @my_posts_current
 @my_posts_current = Post.joins(:reservations).where( profile_id:  @profile_customer.id )
continue
@reservation
continue
@reservation
@post
v
continue
@reservation
@post
continue
@reservation
next
@post
continue
next
 @post.save
next
 @post
next
 @post
 @post)
profession
next
profession
continue
 @post.profession_id
next
@post.profile_id 
next
  @post.profession_id
next
profession
next
@post
profile
continue
@reservation
continue
@reservation
continue
@reservation
@reservation.end_date = @reservation.start_date + end_hour.hour
@reservation.start_date
end_hour
continue
@post
@reservation
continue
@post
@post_session
@reservation
continue
continie
@reservation.save!
@reservation.save
@reservation
continue
continie
@reservation
continue
@reservation
continue
continie
session[:profession_name]
profiles_for_session
continue
params[:filter][:price]
params[:filter][:price].present?
